"use strict";(self.webpackChunkgfdoc=self.webpackChunkgfdoc||[]).push([[17736],{519075:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>a});var r=t(474848),i=t(28453);const d={title:"\u6570\u636e\u6821\u9a8c-\u6821\u9a8c\u89c4\u5219",sidebar_position:0},l=void 0,s={id:"\u6838\u5fc3\u7ec4\u4ef6-\u91cd\u70b9/\u6570\u636e\u6821\u9a8c/\u6570\u636e\u6821\u9a8c-\u6821\u9a8c\u89c4\u5219",title:"\u6570\u636e\u6821\u9a8c-\u6821\u9a8c\u89c4\u5219",description:"GoFrame \u6846\u67b6\u6821\u9a8c\u7ec4\u4ef6\u5185\u7f6e\u4e86\u6570\u5341\u9879\u5e38\u7528\u7684\u6821\u9a8c\u89c4\u5219\uff0c\u6821\u9a8c\u7ec4\u4ef6\u662f\u5f00\u53d1\u8005\u6700\u9891\u7e41\u4f7f\u7528\u7684\u6846\u67b6\u6838\u5fc3\u7ec4\u4ef6\u4e4b\u4e00\u3002",source:"@site/versioned_docs/version-2.0.x/1-\u6838\u5fc3\u7ec4\u4ef6-\u91cd\u70b9/6-\u6570\u636e\u6821\u9a8c/0-\u6570\u636e\u6821\u9a8c-\u6821\u9a8c\u89c4\u5219.md",sourceDirName:"1-\u6838\u5fc3\u7ec4\u4ef6-\u91cd\u70b9/6-\u6570\u636e\u6821\u9a8c",slug:"/\u6838\u5fc3\u7ec4\u4ef6-\u91cd\u70b9/\u6570\u636e\u6821\u9a8c/\u6570\u636e\u6821\u9a8c-\u6821\u9a8c\u89c4\u5219",permalink:"/docs/2.0.x/\u6838\u5fc3\u7ec4\u4ef6-\u91cd\u70b9/\u6570\u636e\u6821\u9a8c/\u6570\u636e\u6821\u9a8c-\u6821\u9a8c\u89c4\u5219",draft:!1,unlisted:!1,tags:[],version:"2.0.x",sidebarPosition:0,frontMatter:{title:"\u6570\u636e\u6821\u9a8c-\u6821\u9a8c\u89c4\u5219",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"\u6570\u636e\u6821\u9a8c",permalink:"/docs/2.0.x/\u6838\u5fc3\u7ec4\u4ef6-\u91cd\u70b9/\u6570\u636e\u6821\u9a8c/"},next:{title:"\u6570\u636e\u6821\u9a8c-\u6821\u9a8c\u5bf9\u8c61",permalink:"/docs/2.0.x/\u6838\u5fc3\u7ec4\u4ef6-\u91cd\u70b9/\u6570\u636e\u6821\u9a8c/\u6570\u636e\u6821\u9a8c-\u6821\u9a8c\u5bf9\u8c61"}},c={},a=[{value:"<code>required</code>",id:"required",level:2},{value:"<code>required-if</code>",id:"required-if",level:2},{value:"<code>required-unless</code>",id:"required-unless",level:2},{value:"<code>required-with</code>",id:"required-with",level:2},{value:"<code>required-with-all</code>",id:"required-with-all",level:2},{value:"<code>required-without</code>",id:"required-without",level:2},{value:"<code>required-without-all</code>",id:"required-without-all",level:2},{value:"bail",id:"bail",level:2},{value:"<code>ci</code>",id:"ci",level:2},{value:"<code>date</code>",id:"date",level:2},{value:"<code>datetime</code>",id:"datetime",level:2},{value:"<code>date-format</code>",id:"date-format",level:2},{value:"<code>email</code>",id:"email",level:2},{value:"<code>phone</code>",id:"phone",level:2},{value:"<code>phone-loose</code>",id:"phone-loose",level:2},{value:"<code>telephone</code>",id:"telephone",level:2},{value:"<code>passport</code>",id:"passport",level:2},{value:"<code>password</code>",id:"password",level:2},{value:"<code>password2</code>",id:"password2",level:2},{value:"<code>password3</code>",id:"password3",level:2},{value:"<code>postcode</code>",id:"postcode",level:2},{value:"<code>resident-id</code>",id:"resident-id",level:2},{value:"<code>bank-card</code>",id:"bank-card",level:2},{value:"<code>qq</code>",id:"qq",level:2},{value:"<code>ip</code>",id:"ip",level:2},{value:"<code>ipv4</code>",id:"ipv4",level:2},{value:"<code>ipv6</code>",id:"ipv6",level:2},{value:"<code>mac</code>",id:"mac",level:2},{value:"<code>url</code>",id:"url",level:2},{value:"<code>domain</code>",id:"domain",level:2},{value:"<code>size</code>",id:"size",level:2},{value:"<code>length</code>",id:"length",level:2},{value:"<code>min-length</code>",id:"min-length",level:2},{value:"<code>max-length</code>",id:"max-length",level:2},{value:"<code>between</code>",id:"between",level:2},{value:"<code>min</code>",id:"min",level:2},{value:"<code>max</code>",id:"max",level:2},{value:"<code>json</code>",id:"json",level:2},{value:"<code>integer</code>",id:"integer",level:2},{value:"<code>float</code>",id:"float",level:2},{value:"<code>boolean</code>",id:"boolean",level:2},{value:"<code>same</code>",id:"same",level:2},{value:"<code>different</code>",id:"different",level:2},{value:"<code>in</code>",id:"in",level:2},{value:"<code>not-in</code>",id:"not-in",level:2},{value:"<code>regex</code>",id:"regex",level:2}];function o(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"GoFrame"})," \u6846\u67b6\u6821\u9a8c\u7ec4\u4ef6\u5185\u7f6e\u4e86\u6570\u5341\u9879\u5e38\u7528\u7684\u6821\u9a8c\u89c4\u5219\uff0c\u6821\u9a8c\u7ec4\u4ef6\u662f\u5f00\u53d1\u8005\u6700\u9891\u7e41\u4f7f\u7528\u7684\u6846\u67b6\u6838\u5fc3\u7ec4\u4ef6\u4e4b\u4e00\u3002"]}),"\n",(0,r.jsx)(n.p,{children:"\u6821\u9a8c\u89c4\u5219\u6d89\u53ca\u5230\u8054\u5408\u6821\u9a8c\u7684\u573a\u666f\u65f6\uff0c\u89c4\u5219\u4e2d\u5173\u8054\u7684\u53c2\u6570\u540d\u79f0\u4f1a\u81ea\u52a8\u6309\u7167\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u4e14\u5ffd\u7565\u7279\u6b8a\u5b57\u7b26\u7684\u5f62\u5f0f\u8fdb\u884c\u667a\u80fd\u5339\u914d\u3002"}),"\n",(0,r.jsx)(n.h2,{id:"required",children:(0,r.jsx)(n.code,{children:"required"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"required"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u5fc5\u9700\u53c2\u6570\uff0c\u9664\u4e86\u652f\u6301\u5e38\u89c1\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u652f\u6301 ",(0,r.jsx)(n.code,{children:"Slice/Map"})," \u7c7b\u578b\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:["\u793a\u4f8b\uff1a\u59d3\u540d\u5b57\u6bb5 ",(0,r.jsx)(n.code,{children:"Name"})," \u4e3a\u5fc5\u9700\u53c2\u6570\u5fc5\u9700\u4e0d\u80fd\u4e3a\u7a7a\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Required() {\n  \ttype BizReq struct {\n  \t\tID   uint   `v:"required"`\n  \t\tName string `v:"required"`\n  \t}\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tID: 1,\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(err)\n  \t}\n\n  \t// Output:\n  \t// The Name field is required\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"required-if",children:(0,r.jsx)(n.code,{children:"required-if"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"required-if:field,value,..."})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u5fc5\u9700\u53c2\u6570(\u5f53\u4efb\u610f\u6240\u7ed9\u5b9a\u5b57\u6bb5\u503c\u4e0e\u6240\u7ed9\u503c\u76f8\u7b49\u65f6\uff0c\u5373\uff1a\u5f53 ",(0,r.jsx)(n.code,{children:"field"})," \u5b57\u6bb5\u7684\u503c\u4e3a ",(0,r.jsx)(n.code,{children:"value"})," \u65f6\uff0c\u5f53\u524d\u9a8c\u8bc1\u5b57\u6bb5\u4e3a\u5fc5\u987b\u53c2\u6570)\u3002\u591a\u4e2a\u5b57\u6bb5\u4ee5 ",(0,r.jsx)(n.code,{children:","})," \u53f7\u5206\u9694\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:["\u793a\u4f8b\uff1a\u5f53 ",(0,r.jsx)(n.code,{children:"Gender"})," \u5b57\u6bb5\u4e3a ",(0,r.jsx)(n.code,{children:"1"})," \u65f6 ",(0,r.jsx)(n.code,{children:"WifeName"})," \u5b57\u6bb5\u5fc5\u987b\u4e0d\u4e3a\u7a7a\uff0c \u5f53 ",(0,r.jsx)(n.code,{children:"Gender"})," \u5b57\u6bb5\u4e3a ",(0,r.jsx)(n.code,{children:"2"})," \u65f6 ",(0,r.jsx)(n.code,{children:"HusbandName"})," \u5b57\u6bb5\u5fc5\u987b\u4e0d\u4e3a\u7a7a\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_RequiredIf() {\n  \ttype BizReq struct {\n  \t\tID          uint   `v:"required" dc:"Your ID"`\n  \t\tName        string `v:"required" dc:"Your name"`\n  \t\tGender      uint   `v:"in:0,1,2" dc:"0:Secret;1:Male;2:Female"`\n  \t\tWifeName    string `v:"required-if:gender,1"`\n  \t\tHusbandName string `v:"required-if:gender,2"`\n  \t}\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tID:     1,\n  \t\t\tName:   "test",\n  \t\t\tGender: 1,\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Println(err)\n  \t}\n\n  \t// Output:\n  \t// The WifeName field is required\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"required-unless",children:(0,r.jsx)(n.code,{children:"required-unless"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"required-unless:field,value,..."})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u5fc5\u9700\u53c2\u6570(\u5f53\u6240\u7ed9\u5b9a\u5b57\u6bb5\u503c\u4e0e\u6240\u7ed9\u503c\u90fd\u4e0d\u76f8\u7b49\u65f6\uff0c\u5373\uff1a\u5f53 ",(0,r.jsx)(n.code,{children:"field"})," \u5b57\u6bb5\u7684\u503c\u4e0d\u4e3a ",(0,r.jsx)(n.code,{children:"value"})," \u65f6\uff0c\u5f53\u524d\u9a8c\u8bc1\u5b57\u6bb5\u4e3a\u5fc5\u987b\u53c2\u6570)\u3002\u591a\u4e2a\u5b57\u6bb5\u4ee5 ",(0,r.jsx)(n.code,{children:","})," \u53f7\u5206\u9694\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:["\u793a\u4f8b\uff1a\u5f53 ",(0,r.jsx)(n.code,{children:"Gender"})," \u4e0d\u7b49\u4e8e ",(0,r.jsx)(n.code,{children:"0"})," \u4e14 ",(0,r.jsx)(n.code,{children:"Gender"})," \u4e0d\u7b49\u4e8e ",(0,r.jsx)(n.code,{children:"2"})," \u65f6\uff0c ",(0,r.jsx)(n.code,{children:"WifeName"})," \u5fc5\u987b\u4e0d\u4e3a\u7a7a\uff1b\u5f53 ",(0,r.jsx)(n.code,{children:"Id"})," \u4e0d\u7b49\u4e8e ",(0,r.jsx)(n.code,{children:"0"})," \u4e14 ",(0,r.jsx)(n.code,{children:"Gender"})," \u4e0d\u7b49\u4e8e ",(0,r.jsx)(n.code,{children:"2"})," \u65f6\uff0c ",(0,r.jsx)(n.code,{children:"HusbandName"})," \u5fc5\u987b\u4e0d\u4e3a\u7a7a\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_RequiredUnless() {\n  \ttype BizReq struct {\n  \t\tID          uint   `v:"required" dc:"Your ID"`\n  \t\tName        string `v:"required" dc:"Your name"`\n  \t\tGender      uint   `v:"in:0,1,2" dc:"0:Secret;1:Male;2:Female"`\n  \t\tWifeName    string `v:"required-unless:gender,0,gender,2"`\n  \t\tHusbandName string `v:"required-unless:id,0,gender,2"`\n  \t}\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tID:     1,\n  \t\t\tName:   "test",\n  \t\t\tGender: 1,\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Println(err)\n  \t}\n\n  \t// Output:\n  \t// The WifeName field is required; The HusbandName field is required\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"required-with",children:(0,r.jsx)(n.code,{children:"required-with"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"required-with:field1,field2,..."})]}),"\n",(0,r.jsx)(n.li,{children:"\u8bf4\u660e\uff1a\u5fc5\u9700\u53c2\u6570(\u5f53\u6240\u7ed9\u5b9a\u4efb\u610f\u5b57\u6bb5\u503c\u5176\u4e2d\u4e4b\u4e00\u4e0d\u4e3a\u7a7a\u65f6)\u3002"}),"\n",(0,r.jsxs)(n.li,{children:["\u793a\u4f8b\uff1a\u5f53 ",(0,r.jsx)(n.code,{children:"WifeName"})," \u4e0d\u4e3a\u7a7a\u65f6\uff0c ",(0,r.jsx)(n.code,{children:"HusbandName"})," \u5fc5\u987b\u4e0d\u4e3a\u7a7a\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_RequiredWith() {\n  \ttype BizReq struct {\n  \t\tID          uint   `v:"required" dc:"Your ID"`\n  \t\tName        string `v:"required" dc:"Your name"`\n  \t\tGender      uint   `v:"in:0,1,2" dc:"0:Secret;1:Male;2:Female"`\n  \t\tWifeName    string\n  \t\tHusbandName string `v:"required-with:WifeName"`\n  \t}\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tID:       1,\n  \t\t\tName:     "test",\n  \t\t\tGender:   1,\n  \t\t\tWifeName: "Ann",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Println(err)\n  \t}\n\n  \t// Output:\n  \t// The HusbandName field is required\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"required-with-all",children:(0,r.jsx)(n.code,{children:"required-with-all"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"required-with-all:field1,field2,..."})]}),"\n",(0,r.jsx)(n.li,{children:"\u8bf4\u660e\uff1a\u5fc5\u987b\u53c2\u6570(\u5f53\u6240\u7ed9\u5b9a\u6240\u6709\u5b57\u6bb5\u503c\u5168\u90e8\u90fd\u4e0d\u4e3a\u7a7a\u65f6)\u3002"}),"\n",(0,r.jsxs)(n.li,{children:["\u793a\u4f8b\uff1a\u5f53 ",(0,r.jsx)(n.code,{children:"Id\uff0cName\uff0cGender\uff0cWifeName"})," \u5168\u90e8\u4e0d\u4e3a\u7a7a\u65f6\uff0c ",(0,r.jsx)(n.code,{children:"HusbandName"})," \u5fc5\u987b\u4e0d\u4e3a\u7a7a\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_RequiredWithAll() {\n  \ttype BizReq struct {\n  \t\tID          uint   `v:"required" dc:"Your ID"`\n  \t\tName        string `v:"required" dc:"Your name"`\n  \t\tGender      uint   `v:"in:0,1,2" dc:"0:Secret;1:Male;2:Female"`\n  \t\tWifeName    string\n  \t\tHusbandName string `v:"required-with-all:Id,Name,Gender,WifeName"`\n  \t}\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tID:       1,\n  \t\t\tName:     "test",\n  \t\t\tGender:   1,\n  \t\t\tWifeName: "Ann",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Println(err)\n  \t}\n\n  \t// Output:\n  \t// The HusbandName field is required\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"required-without",children:(0,r.jsx)(n.code,{children:"required-without"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"required-without:field1,field2,..."})]}),"\n",(0,r.jsx)(n.li,{children:"\u8bf4\u660e\uff1a\u5fc5\u9700\u53c2\u6570(\u5f53\u6240\u7ed9\u5b9a\u4efb\u610f\u5b57\u6bb5\u503c\u5176\u4e2d\u4e4b\u4e00\u4e3a\u7a7a\u65f6)\u3002"}),"\n",(0,r.jsxs)(n.li,{children:["\u793a\u4f8b\uff1a\u5f53 ",(0,r.jsx)(n.code,{children:"Id"})," \u6216 ",(0,r.jsx)(n.code,{children:"WifeName"})," \u4e3a\u7a7a\u65f6\uff0c ",(0,r.jsx)(n.code,{children:"HusbandName"})," \u5fc5\u987b\u4e0d\u4e3a\u7a7a\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_RequiredWithout() {\n  \ttype BizReq struct {\n  \t\tID          uint   `v:"required" dc:"Your ID"`\n  \t\tName        string `v:"required" dc:"Your name"`\n  \t\tGender      uint   `v:"in:0,1,2" dc:"0:Secret;1:Male;2:Female"`\n  \t\tWifeName    string\n  \t\tHusbandName string `v:"required-without:Id,WifeName"`\n  \t}\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tID:     1,\n  \t\t\tName:   "test",\n  \t\t\tGender: 1,\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Println(err)\n  \t}\n\n  \t// Output:\n  \t// The HusbandName field is required\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"required-without-all",children:(0,r.jsx)(n.code,{children:"required-without-all"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"required-without-all:field1,field2,..."})]}),"\n",(0,r.jsx)(n.li,{children:"\u8bf4\u660e\uff1a\u5fc5\u987b\u53c2\u6570(\u5f53\u6240\u7ed9\u5b9a\u6240\u6709\u5b57\u6bb5\u503c\u5168\u90e8\u90fd\u4e3a\u7a7a\u65f6)\u3002"}),"\n",(0,r.jsxs)(n.li,{children:["\u793a\u4f8b\uff1a\u5f53 ",(0,r.jsx)(n.code,{children:"Id"})," \u548c ",(0,r.jsx)(n.code,{children:"WifeName"})," \u90fd\u4e3a\u7a7a\u65f6\uff0c ",(0,r.jsx)(n.code,{children:"HusbandName"})," \u5fc5\u987b\u4e0d\u4e3a\u7a7a\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_RequiredWithoutAll() {\n  \ttype BizReq struct {\n  \t\tID          uint   `v:"required" dc:"Your ID"`\n  \t\tName        string `v:"required" dc:"Your name"`\n  \t\tGender      uint   `v:"in:0,1,2" dc:"0:Secret;1:Male;2:Female"`\n  \t\tWifeName    string\n  \t\tHusbandName string `v:"required-without-all:Id,WifeName"`\n  \t}\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tName:   "test",\n  \t\t\tGender: 1,\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Println(err)\n  \t}\n\n  \t// Output:\n  \t// The HusbandName field is required\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"bail",children:"bail"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f\uff1a ",(0,r.jsx)(n.code,{children:"bail"})]}),"\n",(0,r.jsx)(n.li,{children:"\u8bf4\u660e\uff1a\u53ea\u8981\u540e\u7eed\u7684\u591a\u4e2a\u6821\u9a8c\u4e2d\u6709\u4e00\u4e2a\u89c4\u5219\u6821\u9a8c\u5931\u8d25\u5219\u505c\u6b62\u6821\u9a8c\u5e76\u7acb\u5373\u8fd4\u56de\u6821\u9a8c\u7ed3\u679c\u3002"}),"\n",(0,r.jsx)(n.li,{children:"\u793a\u4f8b\uff1a"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Bail() {\n  \ttype BizReq struct {\n  \t\tAccount   string `v:"bail|required|length:6,16|same:QQ"`\n  \t\tQQ        string\n  \t\tPassword  string `v:"required|same:Password2"`\n  \t\tPassword2 string `v:"required"`\n  \t}\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tAccount:   "gf",\n  \t\t\tQQ:        "123456",\n  \t\t\tPassword:  "goframe.org",\n  \t\t\tPassword2: "goframe.org",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Println(err)\n  \t}\n\n  \t// output:\n  \t// The Account value `gf` length must be between 6 and 16\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"ci",children:(0,r.jsx)(n.code,{children:"ci"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f\uff1a ",(0,r.jsx)(n.code,{children:"ci"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u5b57\u6bb5\u503c\u6bd4\u8f83\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a\u533a\u5206\u5927\u5c0f\u5199\u4e25\u683c\u5339\u914d\u6bd4\u8f83\uff0c\u901a\u8fc7 ",(0,r.jsx)(n.code,{children:"Case Insensitive"}),"\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u5bf9\u4e8e\u9700\u8981\u6bd4\u8f83\u503c\u7684\u89c4\u5219\u5b57\u6bb5\u4e3a\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002\u5982\uff1a ",(0,r.jsx)(n.code,{children:"same"}),", ",(0,r.jsx)(n.code,{children:"different"}),", ",(0,r.jsx)(n.code,{children:"in"}),", ",(0,r.jsx)(n.code,{children:"not-in"})," \u7b49\u3002"]}),"\n",(0,r.jsx)(n.li,{children:"\u793a\u4f8b\uff1a"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_CaseInsensitive() {\n  \ttype BizReq struct {\n  \t\tAccount   string `v:"required"`\n  \t\tPassword  string `v:"required|ci|same:Password2"`\n  \t\tPassword2 string `v:"required"`\n  \t}\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tAccount:   "gf",\n  \t\t\tPassword:  "Goframe.org", // Diff from Password2, but because of "ci", rule check passed\n  \t\t\tPassword2: "goframe.org",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Println(err)\n  \t}\n\n  \t// output:\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"date",children:(0,r.jsx)(n.code,{children:"date"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"date"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u53c2\u6570\u4e3a\u5e38\u7528\u65e5\u671f\u7c7b\u578b\uff0c\u65e5\u671f\u4e4b\u95f4\u652f\u6301\u7684\u8fde\u63a5\u7b26\u53f7 ",(0,r.jsx)(n.code,{children:"-"})," \u6216 ",(0,r.jsx)(n.code,{children:"/"})," \u6216 ",(0,r.jsx)(n.code,{children:"."}),"\uff0c\u4e5f\u652f\u6301\u4e0d\u5e26\u8fde\u63a5\u7b26\u53f7\u7684 ",(0,r.jsx)(n.code,{children:"8"})," \u4f4d\u957f\u5ea6\u65e5\u671f\uff0c\u683c\u5f0f\u5982\uff1a ",(0,r.jsx)(n.code,{children:"2006-01-02"}),", ",(0,r.jsx)(n.code,{children:"2006/01/02"}),", ",(0,r.jsx)(n.code,{children:"2006.01.02"}),", ",(0,r.jsx)(n.code,{children:"20060102"})]}),"\n",(0,r.jsx)(n.li,{children:"\u793a\u4f8b\uff1a"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Date() {\n  \ttype BizReq struct {\n  \t\tDate1 string `v:"date"`\n  \t\tDate2 string `v:"date"`\n  \t\tDate3 string `v:"date"`\n  \t\tDate4 string `v:"date"`\n  \t\tDate5 string `v:"date"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tDate1: "2021-10-31",\n  \t\t\tDate2: "2021.10.31",\n  \t\t\tDate3: "2021-Oct-31",\n  \t\t\tDate4: "2021 Octa 31",\n  \t\t\tDate5: "2021/Oct/31",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(gstr.Join(err.Strings(), "\\n"))\n  \t}\n\n  \t// Output:\n  \t// The Date3 value `2021-Oct-31` is not a valid date\n  \t// The Date4 value `2021 Octa 31` is not a valid date\n  \t// The Date5 value `2021/Oct/31` is not a valid date\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"datetime",children:(0,r.jsx)(n.code,{children:"datetime"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"datetime"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u53c2\u6570\u4e3a\u5e38\u7528\u65e5\u671f\u65f6\u95f4\u7c7b\u578b\uff0c\u5176\u4e2d\u65e5\u671f\u4e4b\u95f4\u652f\u6301\u7684\u8fde\u63a5\u7b26\u53f7\u53ea\u652f\u6301 ",(0,r.jsx)(n.code,{children:"-"}),"\uff0c\u683c\u5f0f\u5982\uff1a ",(0,r.jsx)(n.code,{children:"2006-01-02 12:00:00"})]}),"\n",(0,r.jsx)(n.li,{children:"\u793a\u4f8b\uff1a"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Datetime() {\n  \ttype BizReq struct {\n  \t\tDate1 string `v:"datetime"`\n  \t\tDate2 string `v:"datetime"`\n  \t\tDate3 string `v:"datetime"`\n  \t\tDate4 string `v:"datetime"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tDate1: "2021-11-01 23:00:00",\n  \t\t\tDate2: "2021-11-01 23:00",     // error\n  \t\t\tDate3: "2021/11/01 23:00:00",  // error\n  \t\t\tDate4: "2021/Dec/01 23:00:00", // error\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(gstr.Join(err.Strings(), "\\n"))\n  \t}\n\n  \t// Output:\n  \t// The Date2 value `2021-11-01 23:00` is not a valid datetime\n  \t// The Date3 value `2021/11/01 23:00:00` is not a valid datetime\n  \t// The Date4 value `2021/Dec/01 23:00:00` is not a valid datetime\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"date-format",children:(0,r.jsx)(n.code,{children:"date-format"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"date-format:format"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u5224\u65ad\u65e5\u671f\u662f\u5426\u4e3a\u6307\u5b9a\u7684\u65e5\u671f/\u65f6\u95f4\u683c\u5f0f\uff0c ",(0,r.jsx)(n.code,{children:"format"})," \u53c2\u6570\u683c\u5f0f\u4e3a ",(0,r.jsx)(n.code,{children:"gtime"})," \u65e5\u671f\u683c\u5f0f(\u53ef\u4ee5\u5305\u542b\u65e5\u671f\u53ca\u65f6\u95f4)\uff0c\u683c\u5f0f\u8bf4\u660e\u53c2\u8003\u7ae0\u8282\uff1a ",(0,r.jsx)(n.a,{href:"https://goframe.org/pages/viewpage.action?pageId=1114883",children:"gtime\u6a21\u5757"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u793a\u4f8b\uff1a ",(0,r.jsx)(n.code,{children:"date-format:Y-m-d H:i:s"})]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_DateFormat() {\n  \ttype BizReq struct {\n  \t\tDate1 string `v:"date-format:Y-m-d"`\n  \t\tDate2 string `v:"date-format:Y-m-d"`\n  \t\tDate3 string `v:"date-format:Y-m-d H:i:s"`\n  \t\tDate4 string `v:"date-format:Y-m-d H:i:s"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tDate1: "2021-11-01",\n  \t\t\tDate2: "2021-11-01 23:00", // error\n  \t\t\tDate3: "2021-11-01 23:00:00",\n  \t\t\tDate4: "2021-11-01 23:00", // error\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(gstr.Join(err.Strings(), "\\n"))\n  \t}\n\n  \t// Output:\n  \t// The Date2 value `2021-11-01 23:00` does not match the format: Y-m-d\n  \t// The Date4 value `2021-11-01 23:00` does not match the format: Y-m-d H:i:s\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"email",children:(0,r.jsx)(n.code,{children:"email"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f\uff1a ",(0,r.jsx)(n.code,{children:"email"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a ",(0,r.jsx)(n.code,{children:"EMAIL"})," \u90ae\u7bb1\u5730\u5740\u683c\u5f0f\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Email() {\n  \ttype BizReq struct {\n  \t\tMailAddr1 string `v:"email"`\n  \t\tMailAddr2 string `v:"email"`\n  \t\tMailAddr3 string `v:"email"`\n  \t\tMailAddr4 string `v:"email"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tMailAddr1: "gf@goframe.org",\n  \t\t\tMailAddr2: "gf@goframe", // error\n  \t\t\tMailAddr3: "gf@goframe.org.cn",\n  \t\t\tMailAddr4: "gf#goframe.org", // error\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(gstr.Join(err.Strings(), "\\n"))\n  \t}\n\n  \t// Output:\n  \t// The MailAddr2 value `gf@goframe` is not a valid email address\n  \t// The MailAddr4 value `gf#goframe.org` is not a valid email address\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"phone",children:(0,r.jsx)(n.code,{children:"phone"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f\uff1a ",(0,r.jsx)(n.code,{children:"phone"})]}),"\n",(0,r.jsx)(n.li,{children:"\u8bf4\u660e\uff1a\u5927\u4e2d\u56fd\u533a\u624b\u673a\u53f7\u683c\u5f0f\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Phone() {\n  \ttype BizReq struct {\n  \t\tPhoneNumber1 string `v:"phone"`\n  \t\tPhoneNumber2 string `v:"phone"`\n  \t\tPhoneNumber3 string `v:"phone"`\n  \t\tPhoneNumber4 string `v:"phone"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tPhoneNumber1: "13578912345",\n  \t\t\tPhoneNumber2: "11578912345", // error 11x not exist\n  \t\t\tPhoneNumber3: "17178912345", // error 171 not exit\n  \t\t\tPhoneNumber4: "1357891234",  // error len must be 11\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(gstr.Join(err.Strings(), "\\n"))\n  \t}\n\n  \t// Output:\n  \t// The PhoneNumber2 value `11578912345` is not a valid phone number\n  \t// The PhoneNumber3 value `17178912345` is not a valid phone number\n  \t// The PhoneNumber4 value `1357891234` is not a valid phone number\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"phone-loose",children:(0,r.jsx)(n.code,{children:"phone-loose"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"phone"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u5bbd\u677e\u7684\u624b\u673a\u53f7\u9a8c\u8bc1\uff0c\u53ea\u8981\u6ee1\u8db3 ",(0,r.jsx)(n.code,{children:"13\u300114\u300115\u300116\u300117\u300118\u300119"})," \u5f00\u5934\u768411\u4f4d\u6570\u5b57\u90fd\u53ef\u4ee5\u901a\u8fc7\u9a8c\u8bc1\u3002\u53ef\u7528\u4e8e\u975e\u4e25\u683c\u7684\u4e1a\u52a1\u573a\u666f\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_PhoneLoose() {\n  \ttype BizReq struct {\n  \t\tPhoneNumber1 string `v:"phone-loose"`\n  \t\tPhoneNumber2 string `v:"phone-loose"`\n  \t\tPhoneNumber3 string `v:"phone-loose"`\n  \t\tPhoneNumber4 string `v:"phone-loose"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tPhoneNumber1: "13578912345",\n  \t\t\tPhoneNumber2: "11578912345", // error 11x not exist\n  \t\t\tPhoneNumber3: "17178912345",\n  \t\t\tPhoneNumber4: "1357891234", // error len must be 11\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(gstr.Join(err.Strings(), "\\n"))\n  \t}\n\n  \t// Output:\n  \t// The PhoneNumber2 value `11578912345` is invalid\n  \t// The PhoneNumber4 value `1357891234` is invalid\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"telephone",children:(0,r.jsx)(n.code,{children:"telephone"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"telephone"})]}),"\n",(0,r.jsx)(n.li,{children:"\u8bf4\u660e\uff1a\u5927\u4e2d\u56fd\u533a\u5ea7\u673a\u7535\u8bdd\u53f7\u7801\uff0c\u201dXXXX-XXXXXXX\u201d\u3001\u201dXXXX-XXXXXXXX\u201d\u3001\u201dXXX-XXXXXXX\u201d\u3001\u201dXXX-XXXXXXXX\u201d\u3001\u201dXXXXXXX\u201d\u3001\u201dXXXXXXXX\u201d\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Telephone() {\n  \ttype BizReq struct {\n  \t\tTelephone1 string `v:"telephone"`\n  \t\tTelephone2 string `v:"telephone"`\n  \t\tTelephone3 string `v:"telephone"`\n  \t\tTelephone4 string `v:"telephone"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tTelephone1: "010-77542145",\n  \t\t\tTelephone2: "0571-77542145",\n  \t\t\tTelephone3: "20-77542145", // error\n  \t\t\tTelephone4: "775421451",   // error len must be 7 or 8\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(gstr.Join(err.Strings(), "\\n"))\n  \t}\n\n  \t// Output:\n  \t// The Telephone3 value `20-77542145` is not a valid telephone number\n  \t// The Telephone4 value `775421451` is not a valid telephone number\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"passport",children:(0,r.jsx)(n.code,{children:"passport"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"passport"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u901a\u7528\u5e10\u53f7\u89c4\u5219\uff08 ",(0,r.jsx)(n.strong,{children:"\u5b57\u6bcd\u5f00\u5934\uff0c\u53ea\u80fd\u5305\u542b\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\uff0c\u957f\u5ea6\u57286~18\u4e4b\u95f4"}),"\uff09\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Passport() {\n  \ttype BizReq struct {\n  \t\tPassport1 string `v:"passport"`\n  \t\tPassport2 string `v:"passport"`\n  \t\tPassport3 string `v:"passport"`\n  \t\tPassport4 string `v:"passport"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tPassport1: "goframe",\n  \t\t\tPassport2: "1356666",  // error starting with letter\n  \t\t\tPassport3: "goframe#", // error containing only numbers or underscores\n  \t\t\tPassport4: "gf",       // error length between 6 and 18\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(gstr.Join(err.Strings(), "\\n"))\n  \t}\n\n  \t// Output:\n  \t// The Passport2 value `1356666` is not a valid passport format\n  \t// The Passport3 value `goframe#` is not a valid passport format\n  \t// The Passport4 value `gf` is not a valid passport format\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"password",children:(0,r.jsx)(n.code,{children:"password"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"password"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u901a\u7528\u5bc6\u7801\u89c4\u5219\uff08 ",(0,r.jsx)(n.strong,{children:"\u4efb\u610f\u53ef\u89c1\u5b57\u7b26\uff0c\u957f\u5ea6\u57286~18\u4e4b\u95f4"}),"\uff09\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Password() {\n  \ttype BizReq struct {\n  \t\tPassword1 string `v:"password"`\n  \t\tPassword2 string `v:"password"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tPassword1: "goframe",\n  \t\t\tPassword2: "gofra", // error length between 6 and 18\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(err)\n  \t}\n\n  \t// Output:\n  \t// The Password2 value `gofra` is not a valid password format\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"password2",children:(0,r.jsx)(n.code,{children:"password2"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"password2"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u4e2d\u7b49\u5f3a\u5ea6\u5bc6\u7801\uff08 ",(0,r.jsx)(n.strong,{children:"\u5728\u901a\u7528\u5bc6\u7801\u89c4\u5219\u7684\u57fa\u7840\u4e0a\uff0c\u8981\u6c42\u5bc6\u7801\u5fc5\u987b\u5305\u542b\u5927\u5c0f\u5199\u5b57\u6bcd\u548c\u6570\u5b57"}),"\uff09\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Password2() {\n  \ttype BizReq struct {\n  \t\tPassword1 string `v:"password2"`\n  \t\tPassword2 string `v:"password2"`\n  \t\tPassword3 string `v:"password2"`\n  \t\tPassword4 string `v:"password2"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tPassword1: "Goframe123",\n  \t\t\tPassword2: "gofra",      // error length between 6 and 18\n  \t\t\tPassword3: "Goframe",    // error must contain lower and upper letters and numbers.\n  \t\t\tPassword4: "goframe123", // error must contain lower and upper letters and numbers.\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(gstr.Join(err.Strings(), "\\n"))\n  \t}\n\n  \t// Output:\n  \t// The Password2 value `gofra` is not a valid password format\n  \t// The Password3 value `Goframe` is not a valid password format\n  \t// The Password4 value `goframe123` is not a valid password format\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"password3",children:(0,r.jsx)(n.code,{children:"password3"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"password3"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u5f3a\u7b49\u5f3a\u5ea6\u5bc6\u7801\uff08 ",(0,r.jsx)(n.strong,{children:"\u5728\u901a\u7528\u5bc6\u7801\u89c4\u5219\u7684\u57fa\u7840\u4e0a\uff0c\u5fc5\u987b\u5305\u542b\u5927\u5c0f\u5199\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u7279\u6b8a\u5b57\u7b26"}),"\uff09\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Password3() {\n  \ttype BizReq struct {\n  \t\tPassword1 string `v:"password3"`\n  \t\tPassword2 string `v:"password3"`\n  \t\tPassword3 string `v:"password3"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tPassword1: "Goframe123#",\n  \t\t\tPassword2: "gofra",      // error length between 6 and 18\n  \t\t\tPassword3: "Goframe123", // error must contain lower and upper letters, numbers and special chars.\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(gstr.Join(err.Strings(), "\\n"))\n  \t}\n\n  \t// Output:\n  \t// The Password2 value `gofra` is not a valid password format\n  \t// The Password3 value `Goframe123` is not a valid password format\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"postcode",children:(0,r.jsx)(n.code,{children:"postcode"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"postcode"})]}),"\n",(0,r.jsx)(n.li,{children:"\u8bf4\u660e\uff1a\u5927\u4e2d\u56fd\u533a\u90ae\u653f\u7f16\u7801\u89c4\u5219\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Postcode() {\n  \ttype BizReq struct {\n  \t\tPostcode1 string `v:"postcode"`\n  \t\tPostcode2 string `v:"postcode"`\n  \t\tPostcode3 string `v:"postcode"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tPostcode1: "100000",\n  \t\t\tPostcode2: "10000",   // error length must be 6\n  \t\t\tPostcode3: "1000000", // error length must be 6\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(gstr.Join(err.Strings(), "\\n"))\n  \t}\n\n  \t// Output:\n  \t// The Postcode2 value `10000` is not a valid postcode format\n  \t// The Postcode3 value `1000000` is not a valid postcode format\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"resident-id",children:(0,r.jsx)(n.code,{children:"resident-id"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u683c\u5f0f:\xa0 resident-id"}),"\n",(0,r.jsx)(n.li,{children:"\u8bf4\u660e\uff1a\u516c\u6c11\u8eab\u4efd\u8bc1\u53f7\u7801\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_ResidentId() {\n  \ttype BizReq struct {\n  \t\tResidentID1 string `v:"resident-id"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tResidentID1: "320107199506285482",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(err)\n  \t}\n\n  \t// Output:\n  \t// The ResidentID1 value `320107199506285482` is not a valid resident id number\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"bank-card",children:(0,r.jsx)(n.code,{children:"bank-card"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u683c\u5f0f: \xa0bank-card"}),"\n",(0,r.jsx)(n.li,{children:"\u8bf4\u660e\uff1a\u5927\u4e2d\u56fd\u533a\u94f6\u884c\u5361\u53f7\u6821\u9a8c\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_BankCard() {\n  \ttype BizReq struct {\n  \t\tBankCard1 string `v:"bank-card"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tBankCard1: "6225760079930218",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(err)\n  \t}\n\n  \t// Output:\n  \t// The BankCard1 value `6225760079930218` is not a valid bank card number\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"qq",children:(0,r.jsx)(n.code,{children:"qq"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"qq"})]}),"\n",(0,r.jsx)(n.li,{children:"\u8bf4\u660e\uff1a\u817e\u8bafQQ\u53f7\u7801\u89c4\u5219\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_QQ() {\n  \ttype BizReq struct {\n  \t\tQQ1 string `v:"qq"`\n  \t\tQQ2 string `v:"qq"`\n  \t\tQQ3 string `v:"qq"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tQQ1: "389961817",\n  \t\t\tQQ2: "9999",       // error >= 10000\n  \t\t\tQQ3: "514258412a", // error all number\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(gstr.Join(err.Strings(), "\\n"))\n  \t}\n\n  \t// Output:\n  \t// The QQ2 value `9999` is not a valid QQ number\n  \t// The QQ3 value `514258412a` is not a valid QQ number\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"ip",children:(0,r.jsx)(n.code,{children:"ip"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"ip"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a ",(0,r.jsx)(n.code,{children:"IPv4/IPv6"})," \u5730\u5740\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_IP() {\n  \ttype BizReq struct {\n  \t\tIP1 string `v:"ip"`\n  \t\tIP2 string `v:"ip"`\n  \t\tIP3 string `v:"ip"`\n  \t\tIP4 string `v:"ip"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tIP1: "127.0.0.1",\n  \t\t\tIP2: "fe80::812b:1158:1f43:f0d1",\n  \t\t\tIP3: "520.255.255.255", // error >= 10000\n  \t\t\tIP4: "ze80::812b:1158:1f43:f0d1",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(gstr.Join(err.Strings(), "\\n"))\n  \t}\n\n  \t// Output:\n  \t// The IP3 value `520.255.255.255` is not a valid IP address\n  \t// The IP4 value `ze80::812b:1158:1f43:f0d1` is not a valid IP address\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"ipv4",children:(0,r.jsx)(n.code,{children:"ipv4"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"ipv4"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a ",(0,r.jsx)(n.code,{children:"IPv4"})," \u5730\u5740\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_IPV4() {\n  \ttype BizReq struct {\n  \t\tIP1 string `v:"ipv4"`\n  \t\tIP2 string `v:"ipv4"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tIP1: "127.0.0.1",\n  \t\t\tIP2: "520.255.255.255",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(err)\n  \t}\n\n  \t// Output:\n  \t// The IP2 value `520.255.255.255` is not a valid IPv4 address\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"ipv6",children:(0,r.jsx)(n.code,{children:"ipv6"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"ipv6"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a ",(0,r.jsx)(n.code,{children:"IPv6"})," \u5730\u5740\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_IPV6() {\n  \ttype BizReq struct {\n  \t\tIP1 string `v:"ipv6"`\n  \t\tIP2 string `v:"ipv6"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tIP1: "fe80::812b:1158:1f43:f0d1",\n  \t\t\tIP2: "ze80::812b:1158:1f43:f0d1",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(err)\n  \t}\n\n  \t// Output:\n  \t// The IP2 value `ze80::812b:1158:1f43:f0d1` is not a valid IPv6 address\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"mac",children:(0,r.jsx)(n.code,{children:"mac"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"mac"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a ",(0,r.jsx)(n.code,{children:"MAC"})," \u5730\u5740\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Mac() {\n  \ttype BizReq struct {\n  \t\tMac1 string `v:"mac"`\n  \t\tMac2 string `v:"mac"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tMac1: "4C-CC-6A-D6-B1-1A",\n  \t\t\tMac2: "Z0-CC-6A-D6-B1-1A",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(err)\n  \t}\n\n  \t// Output:\n  \t// The Mac2 value `Z0-CC-6A-D6-B1-1A` is not a valid MAC address\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"url",children:(0,r.jsx)(n.code,{children:"url"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"url"})]}),"\n",(0,r.jsx)(n.li,{children:"\u8bf4\u660e\uff1aURL"}),"\n",(0,r.jsxs)(n.li,{children:["\u793a\u4f8b\uff1a\u652f\u6301\u4ee5 ",(0,r.jsx)(n.code,{children:"http\uff0chttps\uff0cftp\uff0cfile"})," \u5f00\u5934\u7684\u5730\u5740\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Url() {\n  \ttype BizReq struct {\n  \t\tURL1 string `v:"url"`\n  \t\tURL2 string `v:"url"`\n  \t\tURL3 string `v:"url"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tURL1: "http://goframe.org",\n  \t\t\tURL2: "ftp://goframe.org",\n  \t\t\tURL3: "ws://goframe.org",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(err)\n  \t}\n\n  \t// Output:\n  \t// The URL3 value `ws://goframe.org` is not a valid URL address\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"domain",children:(0,r.jsx)(n.code,{children:"domain"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"domain"})]}),"\n",(0,r.jsx)(n.li,{children:"\u8bf4\u660e\uff1a\u57df\u540d"}),"\n",(0,r.jsxs)(n.li,{children:["\u793a\u4f8b\uff1a\u57df\u540d\u89c4\u5219\u3002 ",(0,r.jsx)(n.code,{children:"xxx.yyy"}),"\uff08\u9996\u4f4d\u5fc5\u987b\u4e3a\u5b57\u6bcd\uff09\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Domain() {\n  \ttype BizReq struct {\n  \t\tDomain1 string `v:"domain"`\n  \t\tDomain2 string `v:"domain"`\n  \t\tDomain3 string `v:"domain"`\n  \t\tDomain4 string `v:"domain"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tDomain1: "goframe.org",\n  \t\t\tDomain2: "a.b",\n  \t\t\tDomain3: "goframe#org",\n  \t\t\tDomain4: "1a.2b",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(gstr.Join(err.Strings(), "\\n"))\n  \t}\n\n  \t// Output:\n  \t// The Domain3 value `goframe#org` is not a valid domain format\n  \t// The Domain4 value `1a.2b` is not a valid domain format\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"size",children:(0,r.jsx)(n.code,{children:"size"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"size:size"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["\u8bf4\u660e\uff1a\u53c2\u6570 ",(0,r.jsx)(n.strong,{children:"\u957f\u5ea6"})," \u4e3a `"]}),"\n",(0,r.jsx)(n.p,{children:"size"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"(\u957f\u5ea6\u53c2\u6570\u4e3a\u6574\u5f62)\uff0c\u6ce8\u610f\u5e95\u5c42\u4f7f\u7528 "}),"Unicode",(0,r.jsx)(n.code,{children:"\u8ba1\u7b97\u957f\u5ea6\uff0c\u56e0\u6b64\u4e2d\u6587\u4e00\u4e2a\u6c49\u5b57\u5360"}),"1` \u4e2a\u957f\u5ea6\u5355\u4f4d\u3002"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Size() {\n  \ttype BizReq struct {\n  \t\tSize1 string `v:"size:10"`\n  \t\tSize2 string `v:"size:5"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tSize1: "goframe\u6b22\u8fce\u4f60",\n  \t\t\tSize2: "goframe",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(err)\n  \t}\n\n  \t// Output:\n  \t// The Size2 value `goframe` length must be 5\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"length",children:(0,r.jsx)(n.code,{children:"length"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"length:min,max"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u53c2\u6570 ",(0,r.jsx)(n.strong,{children:"\u957f\u5ea6"})," \u4e3a ",(0,r.jsx)(n.code,{children:"min"})," \u5230 ",(0,r.jsx)(n.code,{children:"max"}),"(\u957f\u5ea6\u53c2\u6570\u4e3a\u6574\u5f62)\uff0c\u6ce8\u610f\u5e95\u5c42\u4f7f\u7528 ",(0,r.jsx)(n.code,{children:"Unicode"})," \u8ba1\u7b97\u957f\u5ea6\uff0c\u56e0\u6b64\u4e2d\u6587\u4e00\u4e2a\u6c49\u5b57\u5360 ",(0,r.jsx)(n.code,{children:"1"})," \u4e2a\u957f\u5ea6\u5355\u4f4d\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Length() {\n  \ttype BizReq struct {\n  \t\tLength1 string `v:"length:5,10"`\n  \t\tLength2 string `v:"length:10,15"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tLength1: "goframe\u6b22\u8fce\u4f60",\n  \t\t\tLength2: "goframe",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(err)\n  \t}\n\n  \t// Output:\n  \t// The Length2 value `goframe` length must be between 10 and 15\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"min-length",children:(0,r.jsx)(n.code,{children:"min-length"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"min-length:min"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u53c2\u6570 ",(0,r.jsx)(n.strong,{children:"\u957f\u5ea6"})," \u6700\u5c0f\u4e3a ",(0,r.jsx)(n.code,{children:"min"}),"(\u957f\u5ea6\u53c2\u6570\u4e3a\u6574\u5f62)\uff0c\u6ce8\u610f\u5e95\u5c42\u4f7f\u7528 ",(0,r.jsx)(n.code,{children:"Unicode"})," \u8ba1\u7b97\u957f\u5ea6\uff0c\u56e0\u6b64\u4e2d\u6587\u4e00\u4e2a\u6c49\u5b57\u5360 ",(0,r.jsx)(n.code,{children:"1"})," \u4e2a\u957f\u5ea6\u5355\u4f4d\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_MinLength() {\n  \ttype BizReq struct {\n  \t\tMinLength1 string `v:"min-length:10"`\n  \t\tMinLength2 string `v:"min-length:8"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tMinLength1: "goframe\u6b22\u8fce\u4f60",\n  \t\t\tMinLength2: "goframe",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(err)\n  \t}\n\n  \t// Output:\n  \t// The MinLength2 value `goframe` length must be equal or greater than 8\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"max-length",children:(0,r.jsx)(n.code,{children:"max-length"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"max-length:max"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u53c2\u6570 ",(0,r.jsx)(n.strong,{children:"\u957f\u5ea6"})," \u6700\u5927\u4e3a ",(0,r.jsx)(n.code,{children:"max"}),"(\u957f\u5ea6\u53c2\u6570\u4e3a\u6574\u5f62)\uff0c\u6ce8\u610f\u5e95\u5c42\u4f7f\u7528 ",(0,r.jsx)(n.code,{children:"Unicode"})," \u8ba1\u7b97\u957f\u5ea6\uff0c\u56e0\u6b64\u4e2d\u6587\u4e00\u4e2a\u6c49\u5b57\u5360 ",(0,r.jsx)(n.code,{children:"1"})," \u4e2a\u957f\u5ea6\u5355\u4f4d\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_MaxLength() {\n  \ttype BizReq struct {\n  \t\tMaxLength1 string `v:"max-length:10"`\n  \t\tMaxLength2 string `v:"max-length:5"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tMaxLength1: "goframe\u6b22\u8fce\u4f60",\n  \t\t\tMaxLength2: "goframe",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(err)\n  \t}\n\n  \t// Output:\n  \t// The MaxLength2 value `goframe` length must be equal or lesser than 5\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"between",children:(0,r.jsx)(n.code,{children:"between"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"between:min,max"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u53c2\u6570 ",(0,r.jsx)(n.strong,{children:"\u5927\u5c0f"})," \u4e3a ",(0,r.jsx)(n.code,{children:"min"})," \u5230 ",(0,r.jsx)(n.code,{children:"max"}),"(\u652f\u6301\u6574\u5f62\u548c\u6d6e\u70b9\u7c7b\u578b\u53c2\u6570)\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Between() {\n  \ttype BizReq struct {\n  \t\tAge1   int     `v:"between:1,100"`\n  \t\tAge2   int     `v:"between:1,100"`\n  \t\tScore1 float32 `v:"between:0.0,10.0"`\n  \t\tScore2 float32 `v:"between:0.0,10.0"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tAge1:   50,\n  \t\t\tAge2:   101,\n  \t\t\tScore1: 9.8,\n  \t\t\tScore2: -0.5,\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(gstr.Join(err.Strings(), "\\n"))\n  \t}\n\n  \t// Output:\n  \t// The Age2 value `101` must be between 1 and 100\n  \t// The Score2 value `-0.5` must be between 0 and 10\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"min",children:(0,r.jsx)(n.code,{children:"min"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"min:min"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u53c2\u6570 ",(0,r.jsx)(n.strong,{children:"\u5927\u5c0f"})," \u6700\u5c0f\u4e3a ",(0,r.jsx)(n.code,{children:"min"}),"(\u652f\u6301\u6574\u5f62\u548c\u6d6e\u70b9\u7c7b\u578b\u53c2\u6570)\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Min() {\n  \ttype BizReq struct {\n  \t\tAge1   int     `v:"min:100"`\n  \t\tAge2   int     `v:"min:100"`\n  \t\tScore1 float32 `v:"min:10.0"`\n  \t\tScore2 float32 `v:"min:10.0"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tAge1:   50,\n  \t\t\tAge2:   101,\n  \t\t\tScore1: 9.8,\n  \t\t\tScore2: 10.1,\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(gstr.Join(err.Strings(), "\\n"))\n  \t}\n\n  \t// Output:\n  \t// The Age1 value `50` must be equal or greater than 100\n  \t// The Score1 value `9.8` must be equal or greater than 10\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"max",children:(0,r.jsx)(n.code,{children:"max"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"max:max"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u53c2\u6570 ",(0,r.jsx)(n.strong,{children:"\u5927\u5c0f"})," \u6700\u5927\u4e3a ",(0,r.jsx)(n.code,{children:"max"}),"(\u652f\u6301\u6574\u5f62\u548c\u6d6e\u70b9\u7c7b\u578b\u53c2\u6570)\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Max() {\n  \ttype BizReq struct {\n  \t\tAge1   int     `v:"max:100"`\n  \t\tAge2   int     `v:"max:100"`\n  \t\tScore1 float32 `v:"max:10.0"`\n  \t\tScore2 float32 `v:"max:10.0"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tAge1:   99,\n  \t\t\tAge2:   101,\n  \t\t\tScore1: 9.9,\n  \t\t\tScore2: 10.1,\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(gstr.Join(err.Strings(), "\\n"))\n  \t}\n\n  \t// Output:\n  \t// The Age2 value `101` must be equal or lesser than 100\n  \t// The Score2 value `10.1` must be equal or lesser than 10\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"json",children:(0,r.jsx)(n.code,{children:"json"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"json"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u5224\u65ad\u6570\u636e\u683c\u5f0f\u4e3a ",(0,r.jsx)(n.code,{children:"JSON"}),"\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Json() {\n  \ttype BizReq struct {\n  \t\tJSON1 string `v:"json"`\n  \t\tJSON2 string `v:"json"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tJSON1: "{\\"name\\":\\"goframe\\",\\"author\\":\\"\u90ed\u5f3a\\"}",\n  \t\t\tJSON2: "{\\"name\\":\\"goframe\\",\\"author\\":\\"\u90ed\u5f3a\\",\\"test\\"}",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(err)\n  \t}\n\n  \t// Output:\n  \t// The JSON2 value `{"name":"goframe","author":"\u90ed\u5f3a","test"}` is not a valid JSON string\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"integer",children:(0,r.jsx)(n.code,{children:"integer"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"integer"})]}),"\n",(0,r.jsx)(n.li,{children:"\u8bf4\u660e\uff1a\u6574\u6570\uff08\u6b63\u6574\u6570\u6216\u8005\u8d1f\u6574\u6570\uff09\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Integer() {\n  \ttype BizReq struct {\n  \t\tInteger string `v:"integer"`\n  \t\tFloat   string `v:"integer"`\n  \t\tStr     string `v:"integer"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tInteger: "100",\n  \t\t\tFloat:   "10.0",\n  \t\t\tStr:     "goframe",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(gstr.Join(err.Strings(), "\\n"))\n  \t}\n\n  \t// Output:\n  \t// The Float value `10.0` is not an integer\n  \t// The Str value `goframe` is not an integer\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"float",children:(0,r.jsx)(n.code,{children:"float"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"float"})]}),"\n",(0,r.jsx)(n.li,{children:"\u8bf4\u660e\uff1a\u6d6e\u70b9\u6570\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Float() {\n  \ttype BizReq struct {\n  \t\tInteger string `v:"float"`\n  \t\tFloat   string `v:"float"`\n  \t\tStr     string `v:"float"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tInteger: "100",\n  \t\t\tFloat:   "10.0",\n  \t\t\tStr:     "goframe",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(err)\n  \t}\n\n  \t// Output:\n  \t// The Str value `goframe` is invalid\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"boolean",children:(0,r.jsx)(n.code,{children:"boolean"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u5e03\u5c14\u503c( ",(0,r.jsx)(n.code,{children:"1"}),", ",(0,r.jsx)(n.code,{children:"true"}),", ",(0,r.jsx)(n.code,{children:"on"}),", ",(0,r.jsx)(n.code,{children:"yes"})," \u4e3a ",(0,r.jsx)(n.code,{children:"true"})," | ",(0,r.jsx)(n.code,{children:"0"}),", ",(0,r.jsx)(n.code,{children:"false"}),", ",(0,r.jsx)(n.code,{children:"off"}),", ",(0,r.jsx)(n.code,{children:"no"}),", ",(0,r.jsx)(n.code,{children:'""'})," \u4e3a ",(0,r.jsx)(n.code,{children:"false"}),")\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Boolean() {\n  \ttype BizReq struct {\n  \t\tBoolean bool    `v:"boolean"`\n  \t\tInteger int     `v:"boolean"`\n  \t\tFloat   float32 `v:"boolean"`\n  \t\tStr1    string  `v:"boolean"`\n  \t\tStr2    string  `v:"boolean"`\n  \t\tStr3    string  `v:"boolean"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tBoolean: true,\n  \t\t\tInteger: 1,\n  \t\t\tFloat:   10.0,\n  \t\t\tStr1:    "on",\n  \t\t\tStr2:    "",\n  \t\t\tStr3:    "goframe",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(gstr.Join(err.Strings(), "\\n"))\n  \t}\n\n  \t// Output:\n  \t// The Float value `10` field must be true or false\n  \t// The Str3 value `goframe` field must be true or false\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"same",children:(0,r.jsx)(n.code,{children:"same"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"same:field"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u53c2\u6570\u503c\u5fc5\u9700\u4e0e ",(0,r.jsx)(n.code,{children:"field"})," \u5b57\u6bb5\u53c2\u6570\u7684\u503c\u76f8\u540c\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:["\u793a\u4f8b\uff1a\u5728\u7528\u6237\u6ce8\u518c\u65f6\uff0c\u63d0\u4ea4\u5bc6\u7801 ",(0,r.jsx)(n.code,{children:"Password"})," \u548c\u786e\u8ba4\u5bc6\u7801 ",(0,r.jsx)(n.code,{children:"Password2"})," \u5fc5\u987b\u76f8\u7b49\uff08\u670d\u52a1\u7aef\u6821\u9a8c\uff09\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Same() {\n  \ttype BizReq struct {\n  \t\tName      string `v:"required"`\n  \t\tPassword  string `v:"required|same:Password2"`\n  \t\tPassword2 string `v:"required"`\n  \t}\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tName:      "gf",\n  \t\t\tPassword:  "goframe.org",\n  \t\t\tPassword2: "goframe.net",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Println(err)\n  \t}\n\n  \t// Output:\n  \t// The Password value `goframe.org` must be the same as field Password2\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"different",children:(0,r.jsx)(n.code,{children:"different"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"different:field"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u53c2\u6570\u503c\u4e0d\u80fd\u4e0e ",(0,r.jsx)(n.code,{children:"field"})," \u5b57\u6bb5\u53c2\u6570\u7684\u503c\u76f8\u540c\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:["\u793a\u4f8b\uff1a\u5907\u7528\u90ae\u7bb1 ",(0,r.jsx)(n.code,{children:"OtherMailAddr"})," \u548c\u90ae\u7bb1\u5730\u5740 ",(0,r.jsx)(n.code,{children:"MailAddr"})," \u5fc5\u987b\u4e0d\u76f8\u540c\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Different() {\n  \ttype BizReq struct {\n  \t\tName            string `v:"required"`\n  \t\tMailAddr        string `v:"required"`\n  \t\tConfirmMailAddr string `v:"required|different:MailAddr"`\n  \t}\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tName:            "gf",\n  \t\t\tMailAddr:        "gf@goframe.org",\n  \t\t\tConfirmMailAddr: "gf@goframe.org",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Println(err)\n  \t}\n\n  \t// Output:\n  \t// The ConfirmMailAddr value `gf@goframe.org` must be different from field MailAddr\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"in",children:(0,r.jsx)(n.code,{children:"in"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"in:value1,value2,..."})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u53c2\u6570\u503c\u5e94\u8be5\u5728 ",(0,r.jsx)(n.code,{children:"value1,value2,..."})," \u4e2d\uff08\u5b57\u7b26\u4e32\u5339\u914d\uff09\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:["\u793a\u4f8b\uff1a\u6027\u522b\u5b57\u6bb5 ",(0,r.jsx)(n.code,{children:"Gender"})," \u7684\u503c\u5fc5\u987b\u5728 ",(0,r.jsx)(n.code,{children:"0/1/2"})," \u4e2d\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_In() {\n  \ttype BizReq struct {\n  \t\tID     uint   `v:"required" dc:"Your Id"`\n  \t\tName   string `v:"required" dc:"Your name"`\n  \t\tGender uint   `v:"in:0,1,2" dc:"0:Secret;1:Male;2:Female"`\n  \t}\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tID:     1,\n  \t\t\tName:   "test",\n  \t\t\tGender: 3,\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Println(err)\n  \t}\n\n  \t// Output:\n  \t// The Gender value `3` is not in acceptable range: 0,1,2\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"not-in",children:(0,r.jsx)(n.code,{children:"not-in"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"not-in:value1,value2,..."})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u53c2\u6570\u503c\u4e0d\u5e94\u8be5\u5728 ",(0,r.jsx)(n.code,{children:"value1,value2,..."})," \u4e2d\uff08\u5b57\u7b26\u4e32\u5339\u914d\uff09\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:["\u793a\u4f8b\uff1a\u65e0\u6548\u7d22\u5f15 ",(0,r.jsx)(n.code,{children:"InvalidIndex"})," \u7684\u503c\u5fc5\u987b\u4e0d\u5728 ",(0,r.jsx)(n.code,{children:"-1/0/1"})," \u4e2d\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_NotIn() {\n  \ttype BizReq struct {\n  \t\tID           uint   `v:"required" dc:"Your Id"`\n  \t\tName         string `v:"required" dc:"Your name"`\n  \t\tInvalidIndex uint   `v:"not-in:-1,0,1"`\n  \t}\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tID:           1,\n  \t\t\tName:         "test",\n  \t\t\tInvalidIndex: 1,\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Println(err)\n  \t}\n\n  \t// Output:\n  \t// The InvalidIndex value `1` must not be in range: -1,0,1\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"regex",children:(0,r.jsx)(n.code,{children:"regex"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u683c\u5f0f: ",(0,r.jsx)(n.code,{children:"regex:pattern"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u8bf4\u660e\uff1a\u53c2\u6570\u503c\u5e94\u5f53\u6ee1\u8db3\u6b63\u5219\u5339\u914d\u89c4\u5219 ",(0,r.jsx)(n.code,{children:"pattern"})]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'func Example_Rule_Regex() {\n  \ttype BizReq struct {\n  \t\tRegex1 string `v:"regex:[1-9][0-9]{4,14}"`\n  \t\tRegex2 string `v:"regex:[1-9][0-9]{4,14}"`\n  \t\tRegex3 string `v:"regex:[1-9][0-9]{4,14}"`\n  \t}\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tRegex1: "1234",\n  \t\t\tRegex2: "01234",\n  \t\t\tRegex3: "10000",\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(gstr.Join(err.Strings(), "\\n"))\n  \t}\n\n  \t// Output:\n  \t// The Regex1 value `1234` must be in regex of: [1-9][0-9]{4,14}\n  \t// The Regex2 value `01234` must be in regex of: [1-9][0-9]{4,14}\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>s});var r=t(296540);const i={},d=r.createContext(i);function l(e){const n=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);